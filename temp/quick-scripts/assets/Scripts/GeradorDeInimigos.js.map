{"version":3,"sources":["GeradorDeInimigos.js"],"names":["cc","Class","extends","Component","properties","tempoParaGerar","Float","inimigoPrefab","Prefab","raio","_distanciaMinima","_limitador","onLoad","schedule","gerar","resolucao","director","getVisibleSize","metadeDaLargura","width","getScene","on","receberLimitador","evento","getUserData","limitador","possoGerar","posicao","calcularPosicao","novoZumbi","node","parent","alcance","Vec2","Math","random","normalize","mul","position","add","distanciaAtual","sub","Camera","main","mag","longeOSuficiente"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,wBAAgBL,GAAGM,KADX;AAERC,uBAAeP,GAAGQ,MAFV;AAGRC,cAAMT,GAAGM,KAHD;AAIRI,0BAAkBV,GAAGM,KAJb;AAKRK,oBAAYX,GAAGG;AALP,KAHP;;AAWLS,YAAQ,kBAAY;AAChB,aAAKC,QAAL,CAAc,KAAKC,KAAnB,EAA0B,KAAKT,cAA/B;AACA,YAAIU,YAAYf,GAAGgB,QAAH,CAAYC,cAAZ,EAAhB;AACA,YAAIC,kBAAkBH,UAAUI,KAAV,GAAkB,CAAxC;AACA,aAAKT,gBAAL,GAAwBQ,eAAxB;AACAlB,WAAGgB,QAAH,CAAYI,QAAZ,GAAuBC,EAAvB,CAA0B,2BAA1B,EAAuD,KAAKC,gBAA5D,EAA8E,IAA9E;AACH,KAjBI;;AAmBLA,sBAAkB,0BAAUC,MAAV,EAAkB;AAChC,aAAKZ,UAAL,GAAkBY,OAAOC,WAAP,GAAqBC,SAAvC;AACH,KArBI;;AAuBLX,WAAO,iBAAY;AACf,YAAI,KAAKY,UAAL,EAAJ,EAAuB;AACnB,gBAAIC,UAAU,KAAKC,eAAL,EAAd;AACA,iBAAKjB,UAAL,CAAgBkB,SAAhB,CAA0B,KAAKC,IAAL,CAAUC,MAApC,EAA4CJ,OAA5C;AACH;AACJ,KA5BI;;AA8BLC,qBAAiB,2BAAY;AACzB,YAAII,UAAU,IAAIhC,GAAGiC,IAAP,CAAYC,KAAKC,MAAL,KAAgB,GAA5B,EAAiCD,KAAKC,MAAL,KAAgB,GAAjD,CAAd;AACAH,kBAAUA,QAAQI,SAAR,EAAV;AACAJ,kBAAUA,QAAQK,GAAR,CAAY,KAAK5B,IAAL,GAAYyB,KAAKC,MAAL,EAAxB,CAAV;;AAEA,YAAIR,UAAU,KAAKG,IAAL,CAAUQ,QAAV,CAAmBC,GAAnB,CAAuBP,OAAvB,CAAd;AACA,eAAOL,OAAP;AACH,KArCI;;AAuCLD,gBAAY,sBAAY;AACpB,YAAIc,iBAAiB,KAAKV,IAAL,CAAUQ,QAAV,CAAmBG,GAAnB,CAAuBzC,GAAG0C,MAAH,CAAUC,IAAV,CAAeb,IAAf,CAAoBQ,QAA3C,CAArB;AACAE,yBAAiBA,eAAeI,GAAf,EAAjB;AACA,YAAIC,mBAAmBL,iBAAiB,KAAK9B,gBAA7C;AACA,eAAOmC,gBAAP;AACH;AA5CI,CAAT","file":"GeradorDeInimigos.js","sourceRoot":"..\\..\\..\\..\\assets\\Scripts","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        tempoParaGerar: cc.Float,\n        inimigoPrefab: cc.Prefab,\n        raio: cc.Float,\n        _distanciaMinima: cc.Float,\n        _limitador: cc.Component,\n    },\n\n    onLoad: function () {\n        this.schedule(this.gerar, this.tempoParaGerar);\n        let resolucao = cc.director.getVisibleSize();\n        let metadeDaLargura = resolucao.width / 2;\n        this._distanciaMinima = metadeDaLargura;\n        cc.director.getScene().on(\"receberOLimitadorDeZumbis\", this.receberLimitador, this);\n    },\n\n    receberLimitador: function (evento) {\n        this._limitador = evento.getUserData().limitador;\n    },\n\n    gerar: function () {\n        if (this.possoGerar()) {\n            let posicao = this.calcularPosicao();\n            this._limitador.novoZumbi(this.node.parent, posicao);\n        }\n    },\n\n    calcularPosicao: function () {\n        let alcance = new cc.Vec2(Math.random() - 0.5, Math.random() - 0.5);\n        alcance = alcance.normalize();\n        alcance = alcance.mul(this.raio * Math.random());\n\n        let posicao = this.node.position.add(alcance);\n        return posicao;\n    },\n    \n    possoGerar: function () {\n        let distanciaAtual = this.node.position.sub(cc.Camera.main.node.position);\n        distanciaAtual = distanciaAtual.mag();\n        let longeOSuficiente = distanciaAtual > this._distanciaMinima;\n        return longeOSuficiente;\n    }\n});"]}